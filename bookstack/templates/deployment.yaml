apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bookstack.fullname" . }}
  labels:
    {{- include "bookstack.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "bookstack.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "bookstack.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "bookstack.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 80
          env:
            - name: PUID
              value: "{{ .Values.env.PUID }}"
            - name: PGID
              value: "{{ .Values.env.PGID }}"
            - name: TZ
              value: "{{ .Values.env.TZ }}"
            - name: APP_URL
              value: "{{ .Values.env.APP_URL }}"
            - name: DB_HOST
              value: "{{ .Values.env.DB_HOST }}"
            - name: DB_PORT
              value: "{{ .Values.env.DB_PORT }}"
            - name: DB_USER
              value: "{{ .Values.env.DB_USER }}"
            - name: DB_PASS
              value: "{{ .Values.env.DB_PASS }}"
            - name: DB_DATABASE
              value: "{{ .Values.env.DB_DATABASE }}"
            - name: FILE_UPLOAD_SIZE_LIMIT
              value: "{{ .Values.env.FILE_UPLOAD_SIZE_LIMIT }}"
          livenessProbe:
            httpGet:
              path: /
              port: 80
          readinessProbe:
            httpGet:
              path: /
              port: 80
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /config
              name: config
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: {{ include "bookstack.fullname" . }}-pvc
